;; WIDGETS

;; Define bar widget
(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    (music)
    (sideWidgets)))


;; Workspaces for hyprland
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")

(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :space-evenly true :halign "start"
      (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
           :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}" :cursor "pointer"
            (label :text "${workspace.id}")
          )
        )
      )
    )
  )


;; Music
(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly true
       :halign "center"
    {music != "" ? "ðŸŽµ ${music}" : ""}))

;; Side widgets
(defwidget sideWidgets []
  (box :class "sideWidgets" :orientation "h" :space-evenly false :halign "end"
    (metric :label "ðŸ”Š"
            :value volume
            :onchange "pamixer --set-volume {}")
    time))

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(defpoll volume :interval "1s"
  "scripts/getvol")

;; Metric widget for side widgets
(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

;; Widget for logo
;;(defwidget logo []
;;    (image
;;        :halign "start"
;;        :path "./assets/arch.svg"
;;        :image-width 30
;;        :image-height 30
;;    )
;;)

;; WINDOWS

(defwindow bar
    :monitor 0
    :stacking "fg"
    :exclusive true
    :namespace "dock"
    :geometry (geometry
        :x "0%"
        :y "0%"
        :width "100%"
        :height "4%"
        :anchor "bottom center"
        )
    (bar)
)
